name: python-tests

on:
  push:
    branches: [ main , 'debug/*' ]
  pull_request:
    branches: [ main , 'debug/*' ]

# OIDC needs this
permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        node-version: [18]

    env:
      MPLBACKEND: Agg
      PYTHONUNBUFFERED: "1"
      # Neutral SUBJECTS_DIR so tests donâ€™t depend on a user path
      SUBJECTS_DIR: ${{ github.workspace }}/.mne_data

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade build tooling
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir ".[dev]"

      - name: Run pre-commit
        run: pre-commit run --all-files

      - name: Test with pytest
        run: |
          pytest tests/test_fetch.py --cov=coord2region/ --cov-report=xml --verbose -s

      - name: Ensure configuration schema is current
        run: |
          PYTHONPATH=. python scripts/generate_schema.py
          git diff --exit-code docs/static/schema.json

      # Upload to Codecov (skip forked PRs so we don't crash on missing OIDC/secrets)
      - name: Upload coverage to Codecov
        if: success() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false)
        uses: codecov/codecov-action@v5
        with:
          use_oidc: true                  # OIDC auth
          token: ${{ secrets.CODECOV_TOKEN }}  # optional; ignored when OIDC is used
          files: coverage.xml
          fail_ci_if_error: true